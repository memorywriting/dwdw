local OrionLib = loadstring(game:HttpGet(("https://raw.githubusercontent.com/memorywriting/dwdw/main/orion")))()

local Window =
    OrionLib:MakeWindow(
    {
        Name = "hydra | v1.2.1",
        HidePremium = true,
        SaveConfig = true,
        ConfigFolder = "Hydra"
    }
)

local Main =
    Window:MakeTab(
    {
        Name = "Main",
        Icon = "rbxassetid://3610247188",
        PremiumOnly = false
    }
)

local function bypassWalkSpeed()
    if getgenv().executed then
        print("Already Bypassed - Applying Settings Changes")
        if not getgenv().Enabled then
            return
        end
    else
        getgenv().executed = true
        print("Bypassed")

        local mt = getrawmetatable(game)
        setreadonly(mt, false)

        local oldindex = mt.__index
        mt.__index = newcclosure(function(self, b)
            if b == 'WalkSpeed' then
                return 16
            end
            return oldindex(self, b)
        end)
    end
end

local reduceLagEnabled = false

function reduceLag()
    local decalsyeeted = true 
    local g = game
    local w = g.Workspace
    local l = g.Lighting
    local t = w.Terrain
    t.WaterWaveSize = 0
    t.WaterWaveSpeed = 0
    t.WaterReflectance = 0
    t.WaterTransparency = 0
    l.GlobalShadows = false
    l.FogEnd = 9e9
    l.Brightness = 0
    settings().Rendering.QualityLevel = "Level01"
    for i, v in pairs(g:GetDescendants()) do
        if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
        elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
            v.Transparency = 1
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastPressure = 1
            v.BlastRadius = 1
        elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") then
            v.Enabled = false
        elseif v:IsA("MeshPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
            v.TextureID = 10385902758728957
        end
    end
    for i, e in pairs(l:GetChildren()) do
        if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
            e.Enabled = false
        end
    end
end

local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("StarterGui")
local player = game:GetService("Players").LocalPlayer
local balls = {}
local lastrefreshtime = os.time()
local targetColor = BrickColor.new(Color3.fromRGB(237, 234, 234))
local reachEnabled = false
local reach = 5

function refreshballs(force)
    if force == false then
        if lastrefreshtime + 2 > os.time() then print("too early") return end
    end
    lastrefreshtime = os.time()
    table.clear(balls)
    for i,v in pairs(workspace:GetDescendants()) do
        if v:IsA("BasePart") and v.CanCollide == true and v.Transparency == 1 and v.BrickColor == targetColor then
            task.wait()
            table.insert(balls,v)
        end
    end
end

local gkReachEnabled = false
local gkReach = 5

UserInputService.InputBegan:Connect(function(i, gameProcessedEvent)
    if i.KeyCode == Enum.KeyCode.W or i.KeyCode == Enum.KeyCode.A or i.KeyCode == Enum.KeyCode.S or i.KeyCode == Enum.KeyCode.D or i.KeyCode == Enum.KeyCode.Space then
        return
    end
    if gameProcessedEvent == false then
        refreshballs(false)
        local bodyParts = {}
        if reachEnabled then
            bodyParts = {player.Character["RightFoot"], player.Character["LeftFoot"]}
        end
        if gkReachEnabled then
            bodyParts = {player.Character["RightHand"], player.Character["LeftHand"]}
        end
        for i,c in pairs(bodyParts) do
            for i,v in pairs(c:GetDescendants()) do
                if v.Name == "TouchInterest" and v.Parent then
                    for i,e in pairs(balls) do
                        if (e.Position - c.Position).magnitude < (reachEnabled and reach or gkReach) then
                            firetouchinterest(e,c,0)
                            firetouchinterest(e,c,1)
                            break
                        end
                    end
                end
            end
        end
    end
end)

Main:AddToggle({
    Name = "Bypass VK (lvl 25+)",
    Default = false,
    Callback = function(toggled)
while toggled do
            coroutine.wrap(function()
                while toggled do
                    local playerList = Players:GetPlayers()
                    table.remove(playerList, table.find(playerList, localPlayer))

                    if #playerList > 0 then
                        local randomPlayer = playerList[math.random(#playerList)]
                        game:GetService('Players'):Chat(":votekick " .. randomPlayer.Name)
                    end

                    wait(30) -- wait for 30 seconds before the next votekick
                end
            end)()

            coroutine.wrap(function()
                while toggled do
                    local playerList = Players:GetPlayers()
                    table.remove(playerList, table.find(playerList, localPlayer))

                    if #playerList > 0 then
                        local randomPlayer = playerList[math.random(#playerList)]
                        game:GetService('Players'):Chat(":votekick " .. randomPlayer.Name)
                    end

                    wait(600) -- wait for 10 minutes before the next votekick
                end
            end)()

            break
        end
    end
})

Main:AddToggle({
    Name = "Reach",
    Default = false,
    Callback = function(Value)
        reachEnabled = Value
    end    
})

Main:AddSlider({
    Name = "Radius",
    Min = 0,
    Max = 25,
    Default = 5,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    Callback = function(Value)
        reach = Value
    end    
})

Main:AddToggle({
    Name = "GK Reach",
    Default = false,
    Callback = function(Value)
        gkReachEnabled = Value
    end    
})

Main:AddSlider({
    Name = "Radius",
    Min = 0,
    Max = 25,
    Default = 5,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    Callback = function(Value)
        gkReach = Value
    end    
})

local Character = Window:MakeTab({
    Name = "Character",
    Icon = "rbxassetid://3610247188",
    PremiumOnly = false
})

Character:AddLabel("Infinite Stamina is enabled by default")


Character:AddDropdown({
    Name = "Universal Scripts",
    Default = "Spawn",
    Options = {"IY", "Fates Admin"},
    Callback = function(Value)
        if Value == "IY" then
            loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
        elseif Value == "Fates Admin" then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/fatesc/fates-admin/main/main.lua"))()
        end
    end    
})

Character:AddToggle({
    Name = "CTRL TP",
    Default = false,
    Callback = function(toggled)
        ctrlTPEnabled = toggled
    end    
})

UserInputService.InputBegan:Connect(function(input)
    if ctrlTPEnabled and input.UserInputType == Enum.UserInputType.MouseButton1 and UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players.LocalPlayer:GetMouse().Hit.p)
    end
end)

Characcter:AddSlider({
    Name = "FOV",
    Min = 0,
    Max = 180,
    Default = 70,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    Callback = function(Value)
        fov = Value
        game.Workspace.CurrentCamera.FieldOfView = fov
    end    
})

Character:AddToggle({
    Name = "Reduce Lag",
    Default = false,
    Callback = function(Value)
        reduceLagEnabled = Value
        if reduceLagEnabled then
            reduceLag()
        end
    end    
})


game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
    bypassWalkSpeed()
    char:WaitForChild("Humanoid").WalkSpeed = getgenv().Speed
end)



Character:AddSlider({
    Name = "WalkSpeed",
    Min = 0,
    Max = 40,
    Default = 16,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    Callback = function(v)
        getgenv().Speed = v
        if game.Players.LocalPlayer.Character then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid").WalkSpeed = getgenv().Speed
        end
    end    
})


OrionLib:Init()



local OrionLib = loadstring(game:HttpGet(("https://raw.githubusercontent.com/memorywriting/dwdw/main/orion")))()

local Window =
    OrionLib:MakeWindow(
    {
        Name = "hydra | v1.2.1",
        HidePremium = true,
        SaveConfig = true,
        ConfigFolder = "Hydra"
    }
)

local Main =
    Window:MakeTab(
    {
        Name = "Main",
        Icon = "rbxassetid://3610247188",
        PremiumOnly = false
    }
)



function disableConnection(Connection)
    for i, v in pairs(getconnections(Connection)) do
        v:Disable()
    end
end

local player = game:GetService("Players").LocalPlayer
local UIS = game:GetService("UserInputService")
local Mouse = player:GetMouse()

local mt = getrawmetatable(game)
setreadonly(mt, false)
local old = mt.__index

local deb = false  
local opos = player.Character.HumanoidRootPart.CFrame

mt.__index = newcclosure(function(self, key)
    if self == "HumanoidRootPart" and self.Parent == player.Character and key == "CFrame" and deb then
        return opos
    end
    return old(self, key)
end)

local function tp(newpos)
    if player.Character ~= nil and player.Character:FindFirstChild("HumanoidRootPart") ~= nil then
        opos = player.Character.HumanoidRootPart.CFrame
        deb = true
        player.Character.HumanoidRootPart.CFrame = CFrame.new(newpos)
        deb = false
    end
end

local function deletePartsInZoneProtect(mapName)
    local map = game.Workspace:FindFirstChild(mapName)
    if map then
        local zoneProtect = map:FindFirstChild("ZoneProtect")
        if zoneProtect then
            for _, part in ipairs(zoneProtect:GetChildren()) do
                if part:IsA("BasePart") then
                    part:Destroy()
                end
            end
        end
    end
end


local function teleportToSpawn()
    local spawnLocation = game.Workspace.Spawn.SurfaceLight.Position
    tp(spawnLocation)
end

local function teleportToMap2()
    local map2Location = game.Workspace.Spawn2.SurfaceLight.Position
    tp(map2Location)
end

local function teleportToMap3()
    local map3Location = game.Workspace.Spawn3.SurfaceLight.Position
    tp(map3Location)
end


local function teleportToMap4()
    local map4Location = game.Workspace.Spawn4.SurfaceLight.Position
    tp(map4Location)
end

local function teleportToMap5()
    local map5Location = game.Workspace.Spawn5.SurfaceLight.Position
    tp(map5Location)
end


function getSword()
    local character = game.Players.LocalPlayer.Character
    local backpack = game.Players.LocalPlayer.Backpack
    local tool = character:FindFirstChildOfClass("Tool")
    if tool then
        return tool
    end

    tool = backpack:FindFirstChildOfClass("Tool")
    if tool then
        return tool
    end

    return nil
end

local speederup = 17

local function Speeder()
    if game.PlaceId == 10767870749 then
        speederup = 24
    else
        speederup = 17
    end
    spawn(
        function()
            ae = true
            function speedup()
                if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character.Humanoid then
                    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = speederup
                end
            end
            if not af then
    af = {}
end

            af.WalkSpeedChanger =
                af.WalkSpeedChanger and af.WalkSpeedChanger:Disconnect() and false or
                game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):GetPropertyChangedSignal(
                    "WalkSpeed"
                ):Connect(speedup)
            af.WalkSpeedAlawys =
                af.WalkSpeedAlawys and af.WalkSpeedAlawys:Disconnect() and false or
                game.Players.LocalPlayer.CharacterAdded:Connect(
                    function()
                        af.WalkSpeedChanger =
                            af.WalkSpeedChanger and af.WalkSpeedChanger:Disconnect() and false or
                            game.Players.LocalPlayer.Character:WaitForChild("Humanoid"):GetPropertyChangedSignal(
                                "WalkSpeed"
                            ):Connect(speedup)
                        speedup()
                    end
                )
            speedup()
            while task.wait() do
                if not ae then
                    af.WalkSpeedChanger =
                        af.WalkSpeedChanger and af.WalkSpeedChanger:Disconnect() and false or nil
                    af.WalkSpeedAlawys = af.WalkSpeedAlawys and af.WalkSpeedAlawys:Disconnect() and false or nil
                    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
                    return
                end
            end
        end
    )
end


local Character = {Spin = false}

function doSpin()
    Character.Spin = true
    if not game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"):FindFirstChildOfClass("BodyAngularVelocity") then
        local Velocity = Instance.new("BodyAngularVelocity", game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"))
        Velocity.AngularVelocity = Vector3.new(0,15,0)
        Velocity.MaxTorque = Vector3.new(0,9e9,0)
        Velocity.P = 1250
    end
end

function undoSpin()
    Character.Spin = false
    if game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"):FindFirstChildOfClass("BodyAngularVelocity") then
        game.Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart"):FindFirstChildOfClass("BodyAngularVelocity"):Destroy()
    end
end

local g = Instance.new("ScreenGui")
g.Enabled = false
local h = Instance.new("TextBox")
h.Parent = g
h.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
h.BackgroundTransparency = 1.000
h.Position = UDim2.new(0.600000024, 0, 0, 0)
h.Size = UDim2.new(0.400000006, 0, 0.200000003, 0)
h.Font = Enum.Font.SourceSans
h.Text = "3.5"
h.TextColor3 = Color3.fromRGB(0, 0, 255)
h.TextScaled = true
h.TextSize = 14.000
h.TextWrapped = true

g.Parent = game:GetService("CoreGui") 

local autoclick = false

Main:AddToggle({
    Name = "AutoClick",
    Default = false,
    Callback = function(Value)
        autoclick = Value
        while autoclick and game.Players.LocalPlayer.Character:FindFirstChild(getSword().Name) do
            local sword = getSword()
            if sword then
                sword:Activate()
            end
            wait()
        end
    end
})

local reachToggle =
    Main:AddToggle(
    {
        Name = "Reach",
        Default = false,
        Callback = function(Value)
            a = Value
        end
    }
)

local reachSlider =
    Main:AddSlider(
    {
        Name = "Radius",
        Min = 0,
        Max = 25,
        Default = 3.5,
        Color = Color3.fromRGB(255, 255, 255),
        Increment = 0.1,
        ValueName = "reach",
        Callback = function(Value)
            h.Text = tostring(Value)
        end
    }
)

local b = true
local c = "Sphere"
local d = true
local e = true
local f = Instance.new("Part")
f.BrickColor = BrickColor.Blue()
f.Transparency = 0.6
f.Anchored = true
f.CanCollide = false
f.Size = Vector3.new(0.5, 0.5, 0.5)
f.BottomSurface = Enum.SurfaceType.Smooth
f.TopSurface = Enum.SurfaceType.Smooth
g.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
g.DisplayOrder = 999999999
g.ResetOnSpawn = false
repeat
    wait()
until game.Players.LocalPlayer
g.Parent = game:GetService("CoreGui")
game:GetService("UserInputService").InputBegan:connect(
    function(i, j)
        if j then
            return
        end
        if i.KeyCode == Enum.KeyCode.R then
            g.Enabled = not g.Enabled
        end
    end
)
local k = game.Players.LocalPlayer
local function l(m, n)
    local o = m.Parent:FindFirstChildOfClass("Humanoid")
    if o and o.Parent.Name ~= game.Players.LocalPlayer.Name then
        if d then
            for p, q in pairs(m.Parent:GetChildren()) do
                if q:IsA("Part") then
                    firetouchinterest(q, n, 0)
                    firetouchinterest(q, n, 1)
                end
            end
        else
            firetouchinterest(m, n, 0)
            firetouchinterest(m, n, 1)
        end
    end
end
game:GetService("RunService").RenderStepped:connect(
    function()
        if not a or not b then
            return
        end
        local r = k.Character and k.Character:FindFirstChildOfClass("Tool")
        if not r then
            f.Parent = nil
        end
        if r then
            local n = r:FindFirstChild("Handle") or r:FindFirstChildOfClass("Part")
            if n then
                if e then
                    f.Parent = workspace
                else
                    f.Parent = nil
                end
                local s = tonumber(h.Text)
                if s then
                    if c == "Sphere" then
                        f.Shape = Enum.PartType.Ball
                        f.Material = Enum.Material.ForceField
                        f.Transparency = 0
                        f.Size = Vector3.new(s, s, s)
                        f.CFrame = n.CFrame
                        for p, q in pairs(game.Players:GetPlayers()) do
                            local t = q.Character and q.Character:FindFirstChild("HumanoidRootPart")
                            if t and n then
                                local u = (t.Position - n.Position).magnitude
                                if u <= s then
                                    l(t, n)
                                end
                            end
                        end
                    end
                end
            end
        end
    end
)

Main:AddLabel("Miscellaneous")

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local HighlightColor = Color3.fromRGB(255, 0, 0) 

local function createHighlight(character)
	local highlight = Instance.new("SelectionBox")
	highlight.Name = "Highlight"
	highlight.Adornee = character.PrimaryPart
	highlight.Color3 = HighlightColor
	highlight.LineThickness = 0.05
	highlight.Transparency = 0.5
	highlight.Parent = character.PrimaryPart
	return highlight
end

local function createLabel(character)
	local billboardGui = Instance.new("BillboardGui")
	local textLabel = Instance.new("TextLabel")

	billboardGui.Adornee = character.PrimaryPart
	billboardGui.Size = UDim2.new(0, 100, 0, 50)
	billboardGui.StudsOffset = Vector3.new(0, 5, 0) 
	billboardGui.Parent = character.PrimaryPart

	textLabel.BackgroundTransparency = 1
	textLabel.Size = UDim2.new(0, 100, 0, 50)
	textLabel.Font = Enum.Font.SourceSansBold
	textLabel.Text = "Snipe"
	textLabel.TextColor3 = Color3.new(1, 0, 0) 
	textLabel.TextScaled = true
	textLabel.Parent = billboardGui

	return billboardGui
end

local highlightedCharacter = nil
local highlightObject = nil
local labelObject = nil
local targetPlayer = nil

local snipeEnabled = false
local connection1 = nil
local connection2 = nil
local connection3 = nil

local function toggleSnipeScript(Value)
    snipeEnabled = Value
    print(". " .. (snipeEnabled and "enabled" or "disabled"))
    if snipeEnabled then
		connection1 = RunService.RenderStepped:Connect(function()
			if not snipeEnabled then return end

			local Target = Mouse.Target
			if Target then
				local player = Players:GetPlayerFromCharacter(Target.Parent)
				if player and player ~= LocalPlayer then
					if highlightedCharacter ~= player.Character then
						if highlightObject then
							highlightObject:Destroy()
						end
						if labelObject then
							labelObject:Destroy()
						end
						highlightedCharacter = player.Character
						highlightObject = createHighlight(highlightedCharacter)
						labelObject = createLabel(highlightedCharacter)
					end
				else
					if highlightObject then
						highlightObject:Destroy()
						highlightObject = nil
						highlightedCharacter = nil
					end
					if labelObject then
						labelObject:Destroy()
						labelObject = nil
					end
				end
			end
		end)

		connection2 = RunService.RenderStepped:Connect(function()
			if not snipeEnabled or not targetPlayer or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") or targetPlayer.Character:FindFirstChild("Humanoid").Health <= 0 then
				targetPlayer = nil
				return
			end

			LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = targetPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame - Vector3.new(0, 5, 0)
		end)

		connection3 = Mouse.Button1Down:Connect(function()
			local target = Mouse.Target
			if target then
				targetPlayer = Players:GetPlayerFromCharacter(target.Parent)
				if targetPlayer and targetPlayer ~= LocalPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
					LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = targetPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame
				end
			end
		end)
	else
		if connection1 then
			connection1:Disconnect()
			connection1 = nil
		end
		if connection2 then
			connection2:Disconnect()
			connection2 = nil
		end
		if connection3 then
			connection3:Disconnect()
			connection3 = nil
		end
		targetPlayer = nil
	end
end

Main:AddToggle({
	Name = "Snipe Players",
	Default = false,
	Callback = function(Value)
		toggleSnipeScript()
	end    
})



local Character = Window:MakeTab({
    Name = "Character",
    Icon = "rbxassetid://3610247188",
    PremiumOnly = false
})

Character:AddLabel("Teleporting to Worlds will only work in some servers")

Character:AddDropdown({
    Name = "Worlds",
    Default = "Spawn",
    Options = {"Spawn", "Map2", "Map3", "Map4", "Map5"},
    Callback = function(Value)
        if Value == "Spawn" then
            teleportToSpawn()
        elseif Value == "Map2" then
            teleportToMap2()
        elseif Value == "Map3" then
            teleportToMap3()
        elseif Value == "Map4" then
            teleportToMap4()
        elseif Value == "Map5" then
            teleportToMap5()
        end
    end    
})


Character:AddToggle({
    Name = "Spin",
    Default = false,
    Callback = function(Value)
        if Value then
            doSpin()
        else
            undoSpin()
        end
    end
})

local function bypassWalkSpeed()
    if getgenv().executed then
        print("Already Bypassed - Applying Settings Changes")
        if not getgenv().Enabled then
            return
        end
    else
        getgenv().executed = true
        print("Bypassed")

        local mt = getrawmetatable(game)
        setreadonly(mt, false)

        local oldindex = mt.__index
        mt.__index = newcclosure(function(self, b)
            if b == 'WalkSpeed' then
                return 16
            end
            return oldindex(self, b)
        end)
    end
end

bypassWalkSpeed()

game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
    bypassWalkSpeed()
    char:WaitForChild("Humanoid").WalkSpeed = getgenv().Speed
end)


Character:AddSlider({
    Name = "WalkSpeed",
    Min = 0,
    Max = 40,
    Default = 16,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    Callback = function(v)
        getgenv().Speed = v
        if game.Players.LocalPlayer.Character then
            game.Players.LocalPlayer.Character:WaitForChild("Humanoid").WalkSpeed = getgenv().Speed
        end
    end    
})

local Game = Window:MakeTab({
    Name = "Game",
    Icon = "rbxassetid://3610247188",
    PremiumOnly = false
})

Character:AddDropdown({
    Name = "Universal Scripts",
    Default = "Spawn",
    Options = {"IY", "Fates Admin"},
    Callback = function(Value)
        if Value == "IY" then
            loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
        elseif Value == "Fates Admin" then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/fatesc/fates-admin/main/main.lua"))()
        end
    end    
})



local LogService = game:GetService("LogService")
local checkedMessages = {}

local function parseMessage(message)
    local player1, player2, studs = message:match("(%w+) was killed by (%w+) (%d+) studs away.")
    return player1, player2, tonumber(studs)
end

local function checkLogs()
    for _, log in ipairs(LogService:GetLogHistory()) do
        if log.messageType == Enum.MessageType.MessageOutput and not checkedMessages[log.message] then
            local _, _, studs = parseMessage(log.message)
            if studs and studs >= 11 then
                OrionLib:MakeNotification({Name = "This might be an exploiter", Content = log.message, Image = "rbxassetid://3610247188", Time = 5})
            end
            checkedMessages[log.message] = true
        end
    end
end

Game:AddToggle({Name = "Detect Exploiters", Default = false, Callback = function(Value)
    if Value then
        loop = game:GetService("RunService").Heartbeat:Connect(checkLogs)
    else
        if loop then loop:Disconnect(); loop = nil end
    end
end})


Game:AddButton({
	Name = "Delete all parts that can kick you",
	Callback = function()
      		workspace.ZoneChecker:Destroy()
deletePartsInZoneProtect("Map")
deletePartsInZoneProtect("Map2")
deletePartsInZoneProtect("Map3")
deletePartsInZoneProtect("Map4")
deletePartsInZoneProtect("Map5")
  	end    
})

Game:AddButton({
	Name = "Reduce Lag",
	Callback = function()
local decalsyeeted = true 
        local g = game
        local w = g.Workspace
        local l = g.Lighting
        local t = w.Terrain
        t.WaterWaveSize = 0
        t.WaterWaveSpeed = 0
        t.WaterReflectance = 0
        t.WaterTransparency = 0
        l.GlobalShadows = false
        l.FogEnd = 9e9
        l.Brightness = 0
        settings().Rendering.QualityLevel = "Level01"
        for i, v in pairs(g:GetDescendants()) do
            if v:IsA("Part") or v:IsA("Union") or v:IsA("CornerWedgePart") or v:IsA("TrussPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
            elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
                v.Transparency = 1
            elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
                v.Lifetime = NumberRange.new(0)
            elseif v:IsA("Explosion") then
                v.BlastPressure = 1
                v.BlastRadius = 1
            elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") then
                v.Enabled = false
            elseif v:IsA("MeshPart") then
                v.Material = "Plastic"
                v.Reflectance = 0
                v.TextureID = 10385902758728957
            end
        end
        for i, e in pairs(l:GetChildren()) do
            if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
                e.Enabled = false
            end
        end
    end,
})


disableConnection(game:GetService("ScriptContext").Error)
OrionLib:Init()

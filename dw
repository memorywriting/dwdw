local library = loadstring(game.HttpGet(game, "https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/0x"))()

local w1 = library:Window("RF24 | FUCKER")

local Workspace = game:GetService("Workspace")
local targetColor = BrickColor.new(Color3.fromRGB(237, 234, 234))
local speed = 16
local fov = 70

w1:Button(
    "Goto ball",
    function()
        for i,v in pairs(Workspace:GetDescendants()) do
            if v:IsA("BasePart") and v.CanCollide == true and v.Transparency == 1 and v.BrickColor == targetColor then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
                break
            end
        end
    end
)

w1:Button(
    "Bring Ball (OP)",
    function()
        for i,v in pairs(Workspace:GetDescendants()) do
            if v:IsA("BasePart") and v.CanCollide == true and v.Transparency == 1 and v.BrickColor == targetColor then
                v.Anchored = true
                v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                break
            end
        end
    end
)

w1:Button(
    "Instant Leave (Server)",
    function()
        game.Players.LocalPlayer:Kick("bye bye")
    end
)

w1:Button(
    "Reset Character",
    function()
        game.Players.LocalPlayer.Character.Humanoid.Health = 0
    end
)

w1:Slider(
    "Speed",
    "WS",
    16,
    25,
    function(value)
        speed = value
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = speed
    end
)

w1:Slider(
    "FOV",
    "FOV",
    0,
    180,
    function(value)
        fov = value
        game.Workspace.CurrentCamera.FieldOfView = fov
    end
)


-- // Visual Command UI Library Example
local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/VisualRoblox/Roblox/main/UI-Libraries/Visual%20Command%20UI%20Library/Source.lua', true))()

local Window = Library:CreateWindow({
    Name = 'Command Bar',
    IntroText = 'Command Bar',
    IntroIcon = 'rbxassetid://10618644218',
    IntroBlur = true,
    IntroBlurIntensity = 15,
    Theme = Library.Themes.dark,
    Position = 'bottom',
    Draggable = true,
    Prefix = ';'
})

Window:AddCommand('BringBall', {'String'}, 'Brings the ball to the player.', function(Arguments, Speaker)
    local ball = Workspace:FindFirstChild(Arguments[1])
    if ball and ball:IsA("BasePart") then
        ball.Anchored = true
        ball.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    else
        print("Ball not found")
    end
end)

Window:AddCommand('Goto', {'String'}, 'Teleports the player to another player.', function(Arguments, Speaker)
    local targetPlayerName = Arguments[1]
    local players = game.Players:GetPlayers()
    for _, player in ipairs(players) do
        if string.sub(player.Name, 1, #targetPlayerName):lower() == targetPlayerName:lower() then
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
                return
            end
        end
    end
    print("Player not found")
end)

Window:AddCommand('GotoBall', {'String'}, 'Teleports the player to the ball.', function(Arguments, Speaker)
    local ball = Workspace:FindFirstChild(Arguments[1])
    if ball and ball:IsA("BasePart") then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = ball.CFrame
    else
        print("Ball not found")
    end
end)


Window:AddCommand('SetPrefix', {'New Prefix'}, 'Changes The Prefix.', function(Arguments, Speaker)
    Window:ChangePrefix(Arguments[1])
end)

Window:AddCommand('SetTheme', {'New Theme'}, 'Changes The Theme.', function(Arguments, Speaker)
    Window:ChangeTheme(Arguments[1])
end)


-- // Functions
Window:AddTheme('test', {
    BackgroundColor = Color3.fromRGB(0, 255, 255),
    SecondaryColor = Color3.fromRGB(225, 225, 225),
    AccentColor = Color3.fromRGB(125, 125, 125),
    PrimaryTextColor = Color3.fromRGB(0, 0, 0),
    SecondaryTextColor = Color3.fromRGB(75, 75, 75)
})

for _, Theme in next, Window:GetThemes(true) do
    print(Theme)
end

for Index, Theme in next, Window:GetThemes(false) do
    print(Index, Theme)
end
